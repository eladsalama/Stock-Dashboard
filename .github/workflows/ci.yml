name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quick-check:
    name: Quick Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Generate Prisma Client (for type info)
        run: npx prisma generate
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck

  build-test:
    needs: quick-check
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stockdash
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 5s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping" --health-interval 5s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stockdash
      AWS_REGION: us-east-1
      AWS_ENDPOINT_URL: http://localhost:4566
      TRADES_BUCKET: trades-bucket
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Generate Prisma Client
        run: npx prisma generate
      - name: Apply migrations
        run: npx prisma migrate deploy
      # Lint & typecheck already ran in quick-check; can optionally skip here or keep for isolation.
      - name: Tests
        run: npm test -- --run --reporter=basic
